{"ast":null,"code":"var _jsxFileName = \"/Users/charis/Downloads/spiced-bootcamp/session-notebook/react-props/demo-start/src/Pet.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Pet({\n  name,\n  sound,\n  emoji,\n  onhandleAnimal,\n  isHungry\n}) {\n  // console.log(\"props:\", props)\n\n  function feedMe() {\n    if (isHungry) {\n      return \"Feed Me!\";\n    } else {\n      return sound;\n    }\n  }\n\n  // we need the function to run only when we click! \n  // so we put it inside a callback function\n  // onClick={() => function (parameters)}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => onhandleAnimal(name, sound),\n    className: \"animal\",\n    children: [\"// if condition for if animal has isHungry, then text Feed me shows // \", isHungry ? \"Feed me!\" : sound, \"// or calling function feedMe above\", feedMe(), /*#__PURE__*/_jsxDEV(\"span\", {\n      role: \"img\",\n      \"aria-label\": name,\n      children: emoji\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 13\n  }, this);\n}\n_c = Pet;\nvar _c;\n$RefreshReg$(_c, \"Pet\");","map":{"version":3,"names":["Pet","name","sound","emoji","onhandleAnimal","isHungry","feedMe","_jsxDEV","onClick","className","children","role","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/charis/Downloads/spiced-bootcamp/session-notebook/react-props/demo-start/src/Pet.js"],"sourcesContent":["export default function Pet({ name, sound, emoji, onhandleAnimal, isHungry }) {\n    // console.log(\"props:\", props)\n\n\n    function feedMe() {\n        if (isHungry) {\n            return \"Feed Me!\"\n        } else {\n            return sound\n        }\n    }\n\n    // we need the function to run only when we click! \n    // so we put it inside a callback function\n    // onClick={() => function (parameters)}\n    return (< div onClick={() => onhandleAnimal(name, sound)} className=\"animal\" >\n\n    // if condition for if animal has isHungry, then text Feed me shows\n    // {isHungry ? \"Feed me!\" : sound}\n    // or calling function feedMe above\n        {feedMe()}\n        < span role=\"img\" aria-label={name}>\n            {emoji}\n        </span >\n    </div >\n\n    )\n}"],"mappings":";;AAAA,eAAe,SAASA,GAAGA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC,KAAK;EAAEC,cAAc;EAAEC;AAAS,CAAC,EAAE;EAC1E;;EAGA,SAASC,MAAMA,CAAA,EAAG;IACd,IAAID,QAAQ,EAAE;MACV,OAAO,UAAU;IACrB,CAAC,MAAM;MACH,OAAOH,KAAK;IAChB;EACJ;;EAEA;EACA;EACA;EACA,oBAAQK,OAAA;IAAMC,OAAO,EAAEA,CAAA,KAAMJ,cAAc,CAACH,IAAI,EAAEC,KAAK,CAAE;IAACO,SAAS,EAAC,QAAQ;IAAAC,QAAA,GAAE,yEAG3E,EAACL,QAAQ,GAAG,UAAU,GAAGH,KAAK,EAAC,qCAE9B,EAACI,MAAM,CAAC,CAAC,eACTC,OAAA;MAAOI,IAAI,EAAC,KAAK;MAAC,cAAYV,IAAK;MAAAS,QAAA,EAC9BP;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAGX;AAACC,EAAA,GA3BuBhB,GAAG;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}